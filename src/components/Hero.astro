---
const {
  id,
  title,
  titleClasses,
  description,
  errorButton,
  buttons,
  imageSrc,
  imageWidth,
  imageClasses,
  imageAlt,
  minImageWidth,
  marginBottom,
  icons,
  dropdownItems,
  container,
  size
} = Astro.props;

const flexSize = size ? size : 'md';
---

<div id="intro" class={`hero hero-${id} text-center ${marginBottom === 'false' ? '' : 'mb-3'}`} data-bs-theme="dark">
  <div class="hero-back h-100 p-3 position-relative">
    <div class="hero-filter w-100 align-items-center d-flex justify-content-center my-466 text-center">
      <div class="text-white">
        <div class={`${container === 'true' ? 'container' : ''}`}>
          <div>
            {imageSrc && (
              <img src={imageSrc} width={imageWidth} alt="icon" style={{ minWidth: minImageWidth || "150px" }} class={imageClasses} alt={`${imageAlt ? imageAlt : 'icon'}`} />
            )}
            {title && (
              <h1 class={`display-3 fw-bold ${imageSrc ? 'mt-mmd-2 d-block d-md-inline align-middle' : ''} ${titleClasses ? titleClasses : ''}`}>{title}</h1>
            )}
          </div>
          <p class="fs-4 m-3 mb-0 text-body-secondary" set:html={description}></p>
          <div class="mx-auto justify-content-between container mt-3" id="links">
            <div class={`d-${flexSize}-flex d-grid gap-2`}>
              {errorButton && (
                <Fragment set:html={errorButton} />
              )}
              {buttons && (
                buttons.map(({ href, text, type }, index) => (
                  <a href={href} class={`btn btn-${type} col-md`}>{text}</a>
                ))
              )}
              {dropdownItems && (
                <div class="dropdown col-md">
                  <button aria-expanded="false" data-bs-toggle="dropdown" type="button" class="btn btn-secondary dropdown-toggle w-100">
                    Navigation
                  </button>
                  <ul class="dropdown-menu w-100 white-space-normal">
                    {dropdownItems.map(({ navigationDesc, navigationLink }, index) => (
                      <li>
                        <a class="dropdown-item" href={navigationLink}>{navigationDesc}</a>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
            {icons && (
              <div class="mt-2 p-1 d-flex justify-content-center gap-3 bg-dark rounded-2" id="icons">
                {icons && icons.map(({ icon, desc, href }, index) => (
                  <a href={href} aria-label={desc} target="_blank" rel="noopener noreferrer" class="link-hero fs-7" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title={desc}>
                    <i class={`bi bi-${icon}`}></i>
                  </a>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
