---
import DefaultBody from '../../layouts/DefaultBody.astro';
import Navbar from '../../layouts/stories/Navbar.astro';
import Scrollspy from '../../layouts/stories/Scrollspy.astro';
import CodeBlock from '../../components/CodeBlock.astro';
import BackToTop from '../../components/BackToTop.astro';
---

<DefaultBody title="CCTV Interception" description="Learn about how to intercept CCTV for educational purposes." author="Pynx" scrollspy="true" highlight="true">
<div id="page">
  <Navbar pageTitle="CCTV Interception" id="cctv"
    link={[
     { name: "Noodle Hackerspace" , href: "/noodle" },
    ]}
    breadcrumbcontent={[ 
      { name: "Noodle Hackerspace" , href: "/noodle" },
      { name: "(Backup)" , href: "/backup/noodle" }
    ]} 
  />
  <div id="main-content">
    <Scrollspy id="cctv" scrollcontent={[ { name: "Prenote" , href: "#prenote" }, { name: "Step 1" , href: "#s1" }, { name: "Step 2" , href: "#s2" }, { name: "Step 3" , href: "#s3" }, { name: "Step 4" , href: "#s4" }, { name: "Step 5" , href: "#s5" }, { name: "Step 6" , href: "#s6" }, { name: "Step 7" , href: "#s7" }, { name: "Step 8" , href: "#s8" }, ]} >
      <Fragment slot="scrollspy-content">
        <div id="intro" class="story-top-scroll">
          <h1 class="text-start">CCTV Interception</h1>
          <h5><a href="/media/pdf/CCTV Interception.pdf" target="_blank" rel="noopener noreferrer"><i class="bi bi-filetype-pdf"></i> PDF Download</a></h5><br>
          <h5><b>Made by:</b> The <a href="/noodle">Noodle Hackerspace</a>. </h5>
          <h5><b>Published by:</b> <a href="/">AT Products LLC</a>.</h5>
          <h5><b>Published on:</b> May 17th, 2023.</h5>
          <hr>
        </div>
        <div id="prenote" class="story-top-scroll">
          <h2>Prenote</h2>
          <h3>Needed Items</h3>
          <p>A computer with <a href="https://www.Wireshark.org/">Wireshark</a> and <a href="https://www.aircrack-ng.org/">AirCrack</a>, a Wi-Fi adapter that supports monitoring, and sufficient time.</p>
          <h3>Keywords</h3>
          <p><code>&lbrace; &rbrace;</code> denotes terminal commands. <code>( )</code> represents general terms.</p>
          <hr>
          <p>To execute this process, Wireshark will be utilized to capture network traffic between hosts. The objective is to intercept unencrypted HTTP traffic directed to a target computer. <br><br>
          Initially, encryption must be bypassed. Even if the network password is known, connecting immediately is not recommended, as it increases the likelihood of detection. Instead, Wi-Fi keys should be added to Wireshark for decryption. Capturing traffic without connecting to the network ensures a passive attack, reducing exposure to detection. <br><br>
          A critical requirement for decryption is obtaining a Wi-Fi handshake. Wireshark relies on observing a four-way WPA handshake to decrypt subsequent traffic. A device with appropriate filtering capabilities can capture this handshake, allowing data decryption using the known password. <br><br>
          Several conditions must be met for this approach to be effective. If the target camera uses a secure interface, data will remain encrypted and unreadable. Additionally, if the camera feed is not actively monitored, no insecure traffic will be available for interception. Furthermore, if a client cannot be disconnected from the network to force a handshake, possession of the password becomes irrelevant. Finally, being outside the network’s range prevents interception of traffic entirely. <br><br>
          Despite these constraints, this method is frequently viable. If a Wi-Fi security camera is in use and a display is actively showing its feed, a Wi-Fi password and compatible adapter are the primary requirements. <br><br>
          Once within range, with an appropriate operating system and necessary tools installed, preparation can begin. The Wi-Fi adapter should be plugged in, and Wireshark must be installed. If Wireshark is not available, one of the following commands can be used depending on the system:</p>
          
          <CodeBlock language="Bash" highlight_as="bash">
            <Fragment slot="code-example">sudo apt install Wireshark -y</Fragment>
          </CodeBlock>
          <CodeBlock language="Bash" highlight_as="bash">
            <Fragment slot="code-example">sudo pacman -S Wireshark -y</Fragment>
          </CodeBlock>
        </div>
        
        <div id="s1" class="story-top-scroll">
          <h2>Step 1</h2>
          <p>To begin, access the built-in interface of the targeted webcam or Wi-Fi security camera. In a browser window on the host computer, navigate to the HTTP interface, enter any required credentials, and initiate the live feed. <br><br>
          If the camera’s network location is unknown, an <a href="https://nmap.org/">Nmap</a> scan can be performed to identify devices running insecure HTTP ports. <br><br>
          The network range is required for this scan, which can be determined by running the command <code>ifconfig</code> to obtain the assigned IP address. Using <code>ipcalc</code> with this IP will calculate the network range, which should resemble <code>192.168.0.0/24</code>. Replace "IP" in the command below with the determined network range:</p>
          
          <CodeBlock language="Bash" highlight_as="bash">
            <Fragment slot="code-example">ipconfig ipcalc sudo nmap -p 80,81,8080,8081 IP</Fragment>
          </CodeBlock>
          
          <p>This scan identifies open ports. If a device with an open port is found, it can be accessed by entering the corresponding IP address followed by <code>:81</code>. For example, navigating to port <code>8081</code> requires entering <code>192.168.0.1:8081</code> in a browser.</p>
        </div>
        
        <div id="s2" class="story-top-scroll">
          <h2>Step 2</h2>
          <p>Connecting a Wi-Fi adapter is required. The "Alfa AWUSO36NHA" is a recommended choice. Before launching Wireshark, two steps must be completed: placing the adapter into monitor mode and identifying the router’s broadcasting channel. <br><br>
          The adapter’s name can be determined by running <code>ifconfig</code>, which will return an interface name such as <code>wlan0</code> or <code>wlan0mon</code>. <br><br>
          Once identified, the adapter must be placed into monitor mode using the following command, replacing <code>wlan0</code> with the correct interface name:</p>
          
          <CodeBlock language="Bash" highlight_as="bash">
            <Fragment slot="code-example">airmon-ng start wlan0 airodump-ng start wlan0mon</Fragment>
          </CodeBlock>
          
          <p>This process modifies the interface name by appending "mon" and initiates Airodump-ng, which scans for available wireless networks. The target network must be identified, and its channel noted for subsequent steps. A sample output is provided below:</p>
          
          <code>
            CH&nbsp;&nbsp;4 ][ Elapsed: 0 s ][ 2018-12-24 02:42
          </code>
          <pre>            
            <table class="table">
              <thead>
                <tr>
                  <th scope="col">BSSID</th>
                  <th scope="col">PWR</th>
                  <th scope="col">Beacons</th>
                  <th scope="col">#Data,</th>
                  <th scope="col">#/s</th>
                  <th scope="col">CH</th>
                  <th scope="col">MB</th>
                  <th scope="col">ENC</th>
                  <th scope="col">CIPHER</th>
                  <th scope="col">AUTH</th>
                  <th scope="col">ESSID</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>C0:8A:DE:39:CD:D9</td>
                  <td>-46</td>
                  <td>2</td>
                  <td>0</td>
                  <td>0</td>
                  <td>1</td>
                  <td>130</td>
                  <td>WPA2</td>
                  <td>CCMP</td>
                  <td>MGT</td>
                  <td>TWCWiFi-Passpoint</td>
                </tr>
                <tr>
                  <td>C0:8A:DE:F9:CD:D8</td>
                  <td>-47</td>
                  <td>2</td>
                  <td>0</td>
                  <td>0</td>
                  <td>1</td>
                  <td>130</td>
                  <td>OPN</td>
                  <td></td>
                  <td></td>
                  <td>TWCWiFi</td>
                </tr>
                <tr>
                  <td>C0:8A:DE:B9:CD:D8</td>
                  <td>-46</td>
                  <td>2</td>
                  <td>0</td>
                  <td>0</td>
                  <td>1</td>
                  <td>130</td>
                  <td>OPN</td>
                  <td></td>
                  <td></td>
                  <td>SpectrumWiFi</td>
                </tr>
                <tr>
                  <td>C0:8A:DE:39:CD:D8</td>
                  <td>-47</td>
                  <td>2</td>
                  <td>0</td>
                  <td>0</td>
                  <td>1</td>
                  <td>130</td>
                  <td>OPN</td>
                  <td></td>
                  <td></td>
                  <td>CableWiFi</td>
                </tr>
                <tr>
                  <td>78:96:84:00:B5:B0</td>
                  <td>-42</td>
                  <td>2</td>
                  <td>0</td>
                  <td>0</td>
                  <td>1</td>
                  <td>130</td>
                  <td>WPA2</td>
                  <td>CCMP</td>
                  <td>PSK</td>
                  <td>The Daily Planet</td>
                </tr>
                <tr>
                  <td>00:9C:02:D2:5E:B9</td>
                  <td>-60</td>
                  <td>3</td>
                  <td>0</td>
                  <td>0</td>
                  <td>1</td>
                  <td>54e.</td>
                  <td>WPA2</td>
                  <td>CCMP</td>
                  <td>PSK</td>
                  <td>HP-Print-B9-Officejet Pro 8600</td>
                </tr>
                <tr>
                  <td>20:10:7A:92:76:43</td>
                  <td>-51</td>
                  <td>2</td>
                  <td>0</td>
                  <td>0</td>
                  <td>1</td>
                  <td>130</td>
                  <td>WPA2</td>
                  <td>CCMP</td>
                  <td>PSK</td>
                  <td>SBG6580E8</td>
                </tr>
                <tr>
                  <td>DE:F2:86:EC:CA:A0</td>
                  <td>-45</td>
                  <td>1</td>
                  <td>0</td>
                  <td>0</td>
                  <td>11</td>
                  <td>195</td>
                  <td>WPA2</td>
                  <td>CCMP</td>
                  <td>PSK</td>
                  <td>Bourgeois Pig Guest</td>
                </tr>
                <tr>
                  <td>D6:04:CD:BD:33:A1</td>
                  <td>-55</td>
                  <td>1</td>
                  <td>0</td>
                  <td>0</td>
                  <td>11</td>
                  <td>130</td>
                  <td>WPA2</td>
                  <td>CCMP</td>
                  <td>PSK</td>
                  <td>DirtyLittleBirdyFeet</td>
                </tr>
                <tr>
                  <td>BSSID</td>
                  <td>STATION</td>
                  <td></td>
                  <td>PWR</td>
                  <td>Rate</td>
                  <td>Frames</td>
                  <td>Lost</td>
                  <td></td>
                  <td>CCMP</td>
                  <td>Probe</td>
                  <td></td>
                </tr>
              </tbody>
            </table>
          </pre>
          
          <p>If the target network operates on channel 11, the following command sets the adapter to the correct channel:</p>
          
          <CodeBlock language="Bash" highlight_as="bash">
            <Fragment slot="code-example">airmon-ng start wlan0mon 11</Fragment>
          </CodeBlock>
          
          <p>This ensures traffic interception occurs on the intended channel.</p>
        </div>
        
        <div id="s3" class="story-top-scroll">
          <h2>Step 3</h2>
          <p>With the adapter configured to the correct channel, Wireshark must be launched. Upon opening, double-click the monitored interface to start capturing packets. However, without the network password, data will remain unreadable. Encryption keys must be added to Wireshark to facilitate decryption.</p>
        </div>
        
        <div id="s4" class="story-top-scroll">
          <h2>Step 4</h2>
          <p>To add encryption keys, navigate to "Edit" in the menu bar and select "Preferences" to open the settings menu. <br><br>
          Within the "Protocols" section, locate and select <code>IEEE 802.11</code> to access Wi-Fi decryption settings. Ensure the "Enable Decryption" box is checked, then click "Edit" next to "Decryption keys" to open the key management panel. <br><br>
          In the key menu, choose "pa-psw" as the method for adding a key. While a <code>wpa-psk</code> option is available, manual calculation is required, making <code>pa-psw</code> the preferred choice. <br><br>
          The key must be added using the plus <code>(+)</code> icon, formatted as <code>(password:networkname)</code>. <br><br>
          Confirm by clicking "OK." If a four-way handshake is successfully captured, decryption of network traffic should now be possible.</p>
        </div>

        <div id="s5" class="story-top-scroll">
          <h2>Step 5</h2>
          <p> In the Wireshark capture, ensure that a significant amount of traffic is visible. While decryption is not possible without a handshake, a filter can be created to display only traffic directed to the target device. <br>
            <br> The most effective method over a Wi-Fi network is to locate a piece of traffic directed to the target device and create a display filter to show only packets heading to that MAC address. This ensures that only traffic directed to the target device is displayed, while other network traffic is ignored. <br>
            <br> Under the packet information, right-click the "Receiver address" for a packet being sent to the target device, select "Apply as Filter," and then "Selected." This will filter the packets to display only those directed to the target.
          </p>
        </div>

        <div id="s6" class="story-top-scroll">
          <h2>Step 6</h2>
          <p> After isolating the traffic from the target device, a four-way handshake can be generated by temporarily disconnecting the target device from the network while Wireshark is capturing traffic. A tool named MDK3 can be used to disconnect devices connected to Wi-Fi and generate a handshake. MDK3 is recommended for advanced Wi-Fi jamming. <br>
            <br> Since the channel of the Wi-Fi network is already known, MDK3 can be used to disrupt any device operating on that channel. To generate a WPA handshake, run the following command in a terminal window, replacing "wlan0mon" with the name of the wireless card and "11" with the channel being targeted:
          </p>
<CodeBlock language="Bash" highlight_as="bash"><Fragment slot="code-example">mdk3 wlan0mon d -c 11 </Fragment></CodeBlock>
          <p>
            After a short period, nearby devices on the network should automatically reconnect, allowing the WPA four-way handshake to be intercepted. To verify the handshake, open a new terminal and run Airodump-ng to monitor for WPA handshakes. Use the following command, substituting <code>wlan0mon</code> and <code>11</code> with the actual interface and channel:
          </p>
<CodeBlock language="Bash" highlight_as="bash"><Fragment slot="code-example">airodump-ng wlan0mon 11  </Fragment></CodeBlock>
          <p> Once the WPA handshake is visible, ensure that the MAC address matches the wireless network being targeted to avoid capturing a handshake for the wrong network. With the four-way handshake captured and the network key entered, full access to data flowing over the network is possible. While HTTPS traffic remains encrypted, raw HTTP traffic should be visible.
          </p>
        </div>

        <div id="s7" class="story-top-scroll">
          <h2>Step 7</h2>
          <p> After gaining access to the network traffic and isolating it to the target device, unrelated traffic may still be present, making it difficult to focus on the desired data. To address this, another network filter can be added to display only HTTP traffic flowing through the network. <br>
            <br> In the Wireshark main view, type HTTP into the display filter bar to narrow down the traffic.
          </p>
        </div>

        <div id="s8" class="story-top-scroll">
          <h2>Step 8</h2>
          <p> With the HTTP traffic from the web application visible, the encoded JPEG files can be selected and processed. Stop the capture, then click on "File" and select "Export Objects." Choose "HTTP" to open the list of intercepted HTTP objects. <br>
            <br> In the HTTP object list, a selection of intercepted JPEG images will be available. Select one or multiple images, then click "Save" or "Save All" and choose a location to export the files. <br>
            <br> After exporting, navigate to the folder containing the exported images. The number of files will depend on the duration of the capture. <br>
            <br> Open one of the images to view a frame from the intercepted video feed.
          </p>
        </div>

        <hr>
        <div id="copyright">
          <h6>® <script is:inline src="/static/year.js"></script> AT Products LLC</h6>
          <h6>AT Products LLC is the publisher of this article/story.</h6>
        </div>
      </Fragment>
    </Scrollspy>
  </div>
  <BackToTop />
</div>
</DefaultBody>
